To use the server you need to use the function of app.use()
1) ---- app.use(bodyParser.urlencoded());----
2) app.use(express.json())---------To parse the body best practice
3) express.json() is a middle ware
app.use(express.json());

//Instance of the application
const app = express();

//To get req.body parse the data using data-parser.urlEndcoded()
app.post("/api/users", (req, res) => {
  console.log("body:", req.body);

  res.json({});
});


middleware:-Simple Js Function

//Basic without middleware

    request--------------Handler----------response

//With middleware

    request------->middleware----->Handler-------->response
                [Token validation]

//Multiple Chaining of middleware

    request--->m1--->m2--->m3--->Handler---->response

1)Global middleWare:-
    when you use middleWare on app then it is a global middleware
    Ex:-app.use(express.json())

2)Custom middleware:-
    i) Write the function middleware
    ii) Use it in between the request
    ---------MiddleWare Function------
    Ex:-const reqHandler(req,res,next)=>{
        console.log(req.body)
        next()
    }
    iii) Use it in the route, Here we have used our middleware in between url and Handler
    Ex:-app.post("/health/users",reqHandler,(req,res)=>{
        res.json({})
    })
3)Error Handing MiddleWare
    i)Error Handling Middleware should be called at last of the routes
    ii)Recieves 4 params like req,res,next,error
    app.use((err, req, res, next) => {
        console.error(err.stack);
        res.status(500).json({ message: "Something Broke!" });
    });
4)Third Party MiddleWare:-
    i)Name:-Cors MiddleWare
    ii)For cross origin Errors
    iii)It is a global middleWare
    Ex:-app.use(cors())